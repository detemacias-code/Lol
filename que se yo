<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Índice de Tarjetas — Simple</title>
  <style>
    :root{--bg:#0f172a;--card:#0b1220;--muted:#94a3b8;--accent:#60a5fa}
    *{box-sizing:border-box;font-family:Inter, system-ui, Arial, sans-serif}
    body{margin:0;background:#0b1220;color:#e6eef8;padding:20px}
    header{display:flex;gap:12px;align-items:center;flex-wrap:wrap}
    h1{margin:0;font-size:20px}
    .controls{margin-left:auto;display:flex;gap:8px;align-items:center}
    input,textarea,select,button{font-size:14px}
    .search{width:260px;padding:8px;border-radius:8px;border:1px solid #16324a;background:#061223;color:inherit}
    .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(220px,1fr));gap:12px;margin-top:18px}
    .card{background:linear-gradient(180deg,rgba(255,255,255,0.02),transparent);border-radius:12px;overflow:hidden;cursor:pointer;box-shadow:0 6px 18px rgba(2,6,23,0.6);transition:transform .14s}
    .card:hover{transform:translateY(-6px)}
    .preview{height:130px;object-fit:cover;width:100%;display:block;background:#0b1220}
    .meta{padding:10px}
    .meta h3{margin:0 0 6px 0;font-size:15px}
    .meta p{margin:0;color:var(--muted);font-size:13px}
    .date{font-size:12px;color:var(--muted);margin-top:8px}
    .form{margin-top:18px;background:rgba(255,255,255,0.02);padding:12px;border-radius:10px}
    .row{display:flex;gap:8px;flex-wrap:wrap}
    .row > *{flex:1 1 160px}
    label{display:block;font-size:13px;margin-bottom:6px;color:var(--muted)}
    input[type=text],input[type=date],textarea{width:100%;padding:8px;border-radius:8px;border:1px solid #16324a;background:#061223;color:inherit}
    textarea{min-height:72px}
    button{padding:8px 10px;border-radius:10px;border:0;background:var(--accent);color:#06203c;cursor:pointer}
    .muted{color:var(--muted);font-size:13px}
    .toolbar{display:flex;gap:8px;margin-top:8px}
    .detail{display:none;padding:12px;margin-top:18px;background:linear-gradient(180deg,rgba(255,255,255,0.02),transparent);border-radius:10px}
    .detail img{max-width:100%;height:auto;border-radius:8px;margin-bottom:8px}
    .small{font-size:13px;color:var(--muted)}
    @media(max-width:520px){.search{width:140px}}
  </style>
</head>
<body>
  <header>
    <h1>Índice de Tarjetas</h1>
    <div class="controls">
      <input id="search" class="search" placeholder="Buscar títulos, descripciones o tags..." />
      <button id="btnExport">Exportar JSON</button>
      <button id="btnImport">Importar JSON</button>
    </div>
  </header>

  <section class="form" id="admin">
    <div class="row">
      <div>
        <label>Título</label>
        <input id="title" placeholder="Mi tarjeta interesante" />
      </div>
      <div>
        <label>Fecha</label>
        <input id="date" type="date" />
      </div>
      <div>
        <label>Imagen (URL)</label>
        <input id="image" placeholder="https://.../image.jpg" />
      </div>
    </div>
    <div style="margin-top:8px">
      <label>Descripción corta</label>
      <textarea id="desc" placeholder="Texto resumido que aparece en la tarjeta"></textarea>
    </div>
    <div style="margin-top:8px" class="row">
      <div>
        <label>Enlace (opcional)</label>
        <input id="link" placeholder="https://... (opcional)" />
      </div>
      <div>
        <label>Tags (coma separados)</label>
        <input id="tags" placeholder="ej: guía,video,blog" />
      </div>
    </div>
    <div class="toolbar">
      <button id="add">Añadir tarjeta</button>
      <button id="clearAll">Eliminar todo</button>
      <span class="muted">Los datos se guardan en el navegador (localStorage). Puedes exportar/importar JSON para respaldar.</span>
    </div>
  </section>

  <main>
    <div id="list" class="grid" aria-live="polite"></div>

    <article id="detail" class="detail"></article>
  </main>

  <input type="file" id="fileInput" accept="application/json" style="display:none" />

  <script>
    // Simple card/index manager — single file app
    const STORAGE_KEY = 'simple_cards_v1'
    const qs = sel=>document.querySelector(sel)
    const listEl = qs('#list')
    const detailEl = qs('#detail')
    const searchEl = qs('#search')

    let cards = load()

    function uid(){return 'c_'+Math.random().toString(36).slice(2,9)}

    function todayISO(){return new Date().toISOString().slice(0,10)}
    qs('#date').value = todayISO()

    function save(){localStorage.setItem(STORAGE_KEY, JSON.stringify(cards))}
    function load(){try{return JSON.parse(localStorage.getItem(STORAGE_KEY)||'[]')}catch(e){return []}}

    function render(){
      // filter and sort
      const q = searchEl.value.trim().toLowerCase()
      const filtered = cards.filter(c=>{
        if(!q) return true
        const hay = (c.title+' '+(c.desc||'')+' '+(c.tags||'')).toLowerCase()
        return hay.includes(q)
      })
      filtered.sort((a,b)=> (b.date||'')>(a.date||'')?1:-1) // newest first
      listEl.innerHTML = ''
      if(filtered.length===0){listEl.innerHTML='<div class="muted">No hay tarjetas. Añade una usando el formulario.</div>';return}
      for(const c of filtered){
        const card = document.createElement('article')
        card.className = 'card'
        card.innerHTML = `
          <img class="preview" src="${c.image||''}" onerror="this.style.background='#061223';this.src='data:image/svg+xml;utf8,<svg xmlns=%22http://www.w3.org/2000/svg%22 width=%22200%22 height=%22130%22><rect width=%22200%22 height=%22130%22 fill=%22%23061123%22/></svg>'" alt="${escapeHtml(c.title)}">
          <div class="meta">
            <h3>${escapeHtml(c.title)}</h3>
            <p>${escapeHtml(c.desc||'')}</p>
            <div class="date">${escapeHtml(c.date||'')}</div>
          </div>
        `
        card.addEventListener('click',()=>openDetail(c.id))
        listEl.appendChild(card)
      }
    }

    function escapeHtml(s){return String(s||'').replace(/[&<>\"]/g,ch=>({"&":"&amp;","<":"&lt;",">":"&gt;","\"":"&quot;"})[ch]||ch)}

    function openDetail(id){
      const c = cards.find(x=>x.id===id)
      if(!c) return
      location.hash = '#'+id
      detailEl.style.display = 'block'
      detailEl.innerHTML = `
        <button id="back">← Volver</button>
        <h2>${escapeHtml(c.title)}</h2>
        ${c.image?`<img src="${c.image}" alt="${escapeHtml(c.title)}">`:''}
        <p class="small">Fecha: ${escapeHtml(c.date||'')}</p>
        <p>${escapeHtml(c.desc||'')}</p>
        ${c.link?`<p><a href="${c.link}" target="_blank" rel="noopener">Abrir enlace</a></p>`:''}
        <p class="small">Tags: ${escapeHtml(c.tags||'')}</p>
        <div style="margin-top:10px"><button id="edit">Editar</button> <button id="del">Eliminar</button></div>
      `
      qs('#back').addEventListener('click',()=>{location.hash='';detailEl.style.display='none'})
      qs('#del').addEventListener('click',()=>{ if(confirm('Eliminar esta tarjeta?')){cards=cards.filter(x=>x.id!==id);save();render();detailEl.style.display='none';location.hash='';}})
      qs('#edit').addEventListener('click',()=>{
        // populate form
        const title = qs('#title'), img=qs('#image'), d=qs('#date'), desc=qs('#desc'), link=qs('#link'), tags=qs('#tags')
        title.value=c.title; img.value=c.image||''; d.value=c.date||''; desc.value=c.desc||''; link.value=c.link||''; tags.value=c.tags||''
        // delete old then let user add
        cards = cards.filter(x=>x.id!==id); save(); render(); detailEl.style.display='none'; location.hash=''
      })
    }

    qs('#add').addEventListener('click',()=>{
      const title = qs('#title').value.trim(); if(!title){alert('Escribe un título');return}
      const id = uid()
      const obj = {
        id,
        title: title,
        date: qs('#date').value || todayISO(),
        image: qs('#image').value.trim() || '',
        desc: qs('#desc').value.trim() || '',
        link: qs('#link').value.trim() || '',
        tags: qs('#tags').value.trim() || ''
      }
      cards.push(obj); save(); render(); // clear basic fields
      qs('#title').value=''; qs('#image').value=''; qs('#desc').value=''; qs('#link').value=''; qs('#tags').value=''; qs('#date').value = todayISO()
    })

    qs('#clearAll').addEventListener('click',()=>{if(confirm('Borrar todas las tarjetas?')){cards=[];save();render();}})

    searchEl.addEventListener('input',()=>render())

    // export/import
    qs('#btnExport').addEventListener('click',()=>{
      const dataStr = JSON.stringify(cards, null, 2)
      const blob = new Blob([dataStr],{type:'application/json'})
      const url = URL.createObjectURL(blob)
      const a = document.createElement('a'); a.href=url; a.download='cards-export.json'; a.click(); URL.revokeObjectURL(url)
    })

    const fileInput = qs('#fileInput')
    qs('#btnImport').addEventListener('click',()=>fileInput.click())
    fileInput.addEventListener('change', async e=>{
      const f = e.target.files[0]; if(!f) return
      try{const txt = await f.text(); const arr = JSON.parse(txt); if(!Array.isArray(arr)) throw new Error('Formato inválido'); cards = arr; save(); render(); alert('Importado correctamente')}catch(err){alert('Error importando: '+err.message)}
    })

    // hash routing: open detail if hash present
    window.addEventListener('hashchange',()=>{
      const id = location.hash.replace('#','')
      if(!id) {detailEl.style.display='none'; return}
      openDetail(id)
    })

    // initial render
    render()

  </script>
</body>
</html>
